---
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Plane2.astro';

export const prerender = true;

export async function getStaticPaths() {
  try {
    const projects = await getCollection('projects');
    
    return projects
      .filter(project => !project.data.draft)
      .map((project) => ({
        params: { slug: project.slug },
        props: { project },
      }));
  } catch (error) {
    console.error('Error in getStaticPaths:', error);
    return [];
  }
}

type Props = {
  project: CollectionEntry<'projects'>;
};

const { project } = Astro.props as Props;
const { Content } = await project.render();

// Get related projects (same category, excluding current project)
const allProjects = await getCollection('projects');
const relatedProjects = allProjects
  .filter(p => p.slug !== project.slug && !p.data.draft && p.data.category === project.data.category)
  .slice(0, 3);

// Format date function
const formatDate = (date: Date) => {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    timeZone: 'UTC'
  });
};

// Get status badge styling
const getStatusStyle = (status: string) => {
  switch (status) {
    case 'completed':
      return 'bg-green-400/10 text-green-400 border-green-400/20';
    case 'in-progress':
      return 'bg-blue-400/10 text-blue-400 border-blue-400/20';
    case 'planned':
      return 'bg-yellow-400/10 text-yellow-400 border-yellow-400/20';
    case 'archived':
      return 'bg-gray-400/10 text-gray-400 border-gray-400/20';
    default:
      return 'bg-slate-400/10 text-slate-400 border-slate-400/20';
  }
};
---

<Layout title={project.data.title}>

  <main class="min-h-screen pb-16">
    <div class="max-w-4xl mx-auto py-12">
      <!-- Back to projects -->
      <div class="mb-8">
        <a 
          href="/projects"
          class="inline-flex items-center text-slate-400 hover:text-blue-400 transition-colors duration-200"
        >
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
          Back to Projects
        </a>
      </div>

      <!-- Project header -->
      <header class="mb-10">
        <div class="mb-4 flex items-center gap-3">
          <span class="inline-block px-3 py-1 text-xs font-medium text-purple-400 bg-purple-400/10 rounded-full">
            {project.data.category}
          </span>
          <span class={`px-3 py-1 text-xs font-medium border rounded-full ${getStatusStyle(project.data.status)} uppercase tracking-wide`}>
            {project.data.status.replace('-', ' ')}
          </span>
        </div>
        
        <h1 class="text-4xl md:text-5xl font-bold text-white mb-6 leading-tight">
          {project.data.title}
        </h1>
        
        <p class="text-xl text-slate-300 mb-6">
          {project.data.description}
        </p>
        
        <!-- Project Meta -->
        <div class="grid md:grid-cols-2 gap-6 mb-6">
          <!-- Timeline -->
          <div class="bg-slate-800/30 backdrop-blur-sm border border-slate-700/50 rounded-lg p-4">
            <h3 class="text-sm font-semibold text-slate-400 uppercase tracking-wide mb-2">Timeline</h3>
            <p class="text-white">
              {formatDate(project.data.startDate)}
              {project.data.endDate ? ` ‚Äî ${formatDate(project.data.endDate)}` : ' ‚Äî Present'}
            </p>
          </div>

          <!-- Links -->
          <div class="bg-slate-800/30 backdrop-blur-sm border border-slate-700/50 rounded-lg p-4">
            <h3 class="text-sm font-semibold text-slate-400 uppercase tracking-wide mb-2">Links</h3>
            <div class="flex gap-4">
              {project.data.githubUrl && (
                <a 
                  href={project.data.githubUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center text-blue-400 hover:text-blue-300 transition-colors duration-200"
                >
                  <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                  </svg>
                  GitHub
                </a>
              )}
              {project.data.liveUrl && (
                <a 
                  href={project.data.liveUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex items-center text-blue-400 hover:text-blue-300 transition-colors duration-200"
                >
                  <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                  </svg>
                  Live Demo
                </a>
              )}
            </div>
          </div>
        </div>
        
        <!-- Technologies -->
        <div class="mb-6">
          <h3 class="text-sm font-semibold text-slate-400 uppercase tracking-wide mb-3">Technologies</h3>
          <div class="flex flex-wrap gap-2">
            {project.data.technologies.map((tech: string) => (
              <span class="px-3 py-1 text-sm text-slate-300 bg-slate-700/50 rounded-full border border-slate-600/50">
                {tech}
              </span>
            ))}
          </div>
        </div>

        <!-- Collaborators -->
        {project.data.collaborators && project.data.collaborators.length > 0 && (
          <div class="mb-6">
            <h3 class="text-sm font-semibold text-slate-400 uppercase tracking-wide mb-3">Collaborators</h3>
            <div class="flex flex-wrap gap-2">
              {project.data.collaborators.map((collaborator: string) => (
                <span class="px-3 py-1 text-sm text-blue-400 bg-blue-400/10 rounded-full border border-blue-400/20">
                  {collaborator}
                </span>
              ))}
            </div>
          </div>
        )}

        <!-- Achievements -->
        {project.data.achievements && project.data.achievements.length > 0 && (
          <div class="mb-6">
            <h3 class="text-sm font-semibold text-slate-400 uppercase tracking-wide mb-3">üèÜ Achievements</h3>
            <ul class="space-y-2">
              {project.data.achievements.map((achievement: string) => (
                <li class="flex items-center text-green-400">
                  <span class="w-2 h-2 bg-green-400 rounded-full mr-3"></span>
                  {achievement}
                </li>
              ))}
            </ul>
          </div>
        )}
      </header>

      <!-- Project content -->
      <article class="prose prose-lg prose-invert prose-slate max-w-none mb-16 
        prose-headings:font-bold prose-headings:text-white 
        prose-h1:text-4xl prose-h1:mb-6 prose-h1:mt-8 prose-h1:bg-gradient-to-r prose-h1:from-blue-400 prose-h1:to-purple-500 prose-h1:bg-clip-text prose-h1:text-transparent
        prose-h2:text-3xl prose-h2:mb-4 prose-h2:mt-8 prose-h2:border-b prose-h2:border-slate-600 prose-h2:pb-2
        prose-h3:text-2xl prose-h3:mb-3 prose-h3:mt-6
        prose-h4:text-xl prose-h4:mb-2 prose-h4:mt-5
        prose-p:text-slate-300 prose-p:leading-8 prose-p:mb-6
        prose-a:text-blue-400 prose-a:no-underline hover:prose-a:text-blue-300 prose-a:font-medium
        prose-strong:text-white prose-strong:font-bold
        prose-em:text-slate-200
        prose-code:text-slate-100 prose-code:bg-slate-800 prose-code:px-2 prose-code:py-1 prose-code:rounded prose-code:font-mono prose-code:text-sm
        prose-pre:bg-slate-900 prose-pre:border prose-pre:border-slate-700 prose-pre:rounded-lg prose-pre:p-6
        prose-blockquote:border-l-blue-400 prose-blockquote:bg-slate-800/50 prose-blockquote:text-slate-200 prose-blockquote:font-normal prose-blockquote:not-italic
        prose-ul:list-disc prose-ul:pl-6
        prose-ol:list-decimal prose-ol:pl-6
        prose-li:text-slate-300 prose-li:mb-2
        prose-img:rounded-lg prose-img:shadow-2xl prose-img:mx-auto
        prose-hr:border-slate-600
        prose-table:border-collapse prose-table:bg-slate-800/50 prose-table:rounded-lg prose-table:overflow-hidden
        prose-th:bg-slate-700 prose-th:text-white prose-th:font-semibold prose-th:p-4
        prose-td:text-slate-300 prose-td:p-4 prose-td:border-t prose-td:border-slate-600">
        <Content />
      </article>

      <!-- Related projects -->
      {relatedProjects.length > 0 && (
        <section class="border-t border-slate-700 pt-12 mt-12">
          <h2 class="text-2xl font-bold text-white mb-8 flex items-center">
            <span class="w-3 h-3 bg-purple-500 rounded-full mr-3"></span>
            Related Projects
          </h2>
          <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
            {relatedProjects.map((relatedProject) => (
              <article class="bg-slate-800/50 rounded-lg p-6 hover:bg-slate-700/50 transition-colors duration-200">
                <div class="mb-3">
                  <span class="inline-block px-2 py-1 text-xs font-medium text-purple-400 bg-purple-400/10 rounded">
                    {relatedProject.data.category}
                  </span>
                </div>
                <h3 class="text-lg font-semibold text-white mb-2">
                  <a href={`/projects/${relatedProject.slug}`} class="hover:text-blue-400 transition-colors duration-200">
                    {relatedProject.data.title}
                  </a>
                </h3>
                <p class="text-slate-400 text-sm mb-3">
                  {relatedProject.data.description}
                </p>
                <div class="text-xs text-slate-500">
                  {formatDate(relatedProject.data.startDate)}
                  {relatedProject.data.endDate && ` ‚Äî ${formatDate(relatedProject.data.endDate)}`}
                </div>
              </article>
            ))}
          </div>
        </section>
      )}

      <!-- Back to projects -->
      <div class="text-center mt-12">
        <a
          href="/projects"
          class="inline-flex items-center px-6 py-3 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors duration-200"
        >
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
          Back to All Projects
        </a>
      </div>
    </div>
  </main>

</Layout>

<style>
  /* Enhanced link hover effects */
  .prose a {
    position: relative;
    transition: all 0.3s ease;
  }

  .prose a::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 2px;
    background: linear-gradient(90deg, rgb(96 165 250), rgb(147 51 234));
    transition: width 0.3s ease;
  }

  .prose a:hover::after {
    width: 100%;
  }

  /* Enhanced gradient for h2 underlines */
  .prose h2::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 60px;
    height: 2px;
    background: linear-gradient(90deg, rgb(96 165 250), rgb(147 51 234));
  }
</style>
