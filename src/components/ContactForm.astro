<section class="w-full max-w-7xl mx-auto px-8">
    <div class="bg-slate-800/60 backdrop-blur-sm border border-slate-600/50 rounded-lg p-8 shadow-2xl">
        <form id="contact-form" action="https://formspree.io/f/mvgqjlgv" method="POST" novalidate>
    
        <!-- Title -->
        <h2 class="text-2xl font-bold text-white mb-2">
            Contact
        </h2>

        <p class="text-gray-300 text-sm leading-relaxed mb-6">
            <!-- Interested in working together on a project, exploring opportunities, or have questions? Feel free to send me a message, and I'll respond as soon as possible! -->
            Interested in chatting about a project, collaborating on something new, or have questions? Leave me a message, and I'll respond as soon as possible!
        </p>

        <!-- Honeypot -->
        <input type="text" name="_gotcha" class="hidden" tabindex="-1" autocomplete="off" />
        <input type="hidden" name="_subject" value="New message from danglorioso.com" />

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <!-- Left Column -->
            <div class="space-y-4">
                
                <!-- Name (First and Last) -->
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label class="block text-gray-300 mb-2">
                            First Name <span class="text-red-500">*</span>
                        </label>
                        <input 
                            type="text" 
                            required
                            name="firstName" 
                            placeholder=""
                            class="w-full bg-slate-700/50 border border-slate-500/50 text-white placeholder:text-gray-400 rounded-md px-4 py-3 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200" 
                        />
                        <div id="firstName-error" class="text-red-400 text-sm mt-1"></div>
                    </div>
                    <div>
                        <label class="block text-gray-300 mb-2">
                            Last Name <span class="text-red-500">*</span>
                        </label>
                        <input 
                            type="text" 
                            required
                            name="lastName" 
                            placeholder=""
                            class="w-full bg-slate-700/50 border border-slate-500/50 text-white placeholder:text-gray-400 rounded-md px-4 py-3 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200" 
                        />
                        <div id="lastName-error" class="text-red-400 text-sm mt-1"></div>
                    </div>
                </div>

                <!-- Email -->
                <div>
                    <label class="block text-gray-300 mb-2">
                        Email <span class="text-red-500">*</span>
                    </label>
                    <input 
                        type="email"
                        required
                        name="email" 
                        placeholder=""
                        class="w-full bg-slate-700/50 border border-slate-500/50 text-white placeholder:text-gray-400 rounded-md px-4 py-3 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200" 
                    />
                    <div id="email-error" class="text-red-400 text-sm mt-1"></div>
                </div>
                
                <!-- Company -->
                <div>
                    <label class="block text-gray-300 mb-2">
                        Company <span class="text-gray-500">(optional)</span>
                    </label>
                    <input 
                        type="text"
                        name="company"
                        placeholder=""
                        class="w-full bg-slate-700/50 border border-slate-500/50 text-white placeholder:text-gray-400 rounded-md px-4 py-3 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200" 
                    />
                </div>
            </div>
            
            <!-- Right Column -->
            <div class="space-y-4">
                <!-- Message Block -->
                <div>
                    <label class="block text-gray-300 mb-2">
                        Message <span class="text-red-500">*</span>
                    </label>
                    <textarea 
                        name="message" 
                        required
                        style="height: 15.65rem;"
                        placeholder=""
                        class="w-full bg-slate-700/50 border border-slate-500/50 text-white placeholder:text-gray-400 rounded-md px-4 py-3 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 resize-none"
                    ></textarea>
                    <div id="message-error" class="text-red-400 text-sm mt-1"></div>
                </div>

                <!-- General Status Message (for success/network errors) -->
                <div id="form-status" class="text-sm"></div>

                <!-- Submit Button -->
                <div class="flex justify-end">
                    <button 
                        type="submit" 
                        id="submit-btn"
                        class="bg-blue-600 hover:bg-blue-700 disabled:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed text-white font-semibold py-3 px-6 rounded-md transition-all duration-200"
                    >
                        <span id="btn-text">Send Message</span>
                    </button>
                </div>
            </div>
        </div>

        </form>
    </div>
</section>

<script is:inline>
    (function () {
        const form = document.getElementById('contact-form');
        const statusEl = document.getElementById('form-status');
        const submitBtn = document.getElementById('submit-btn');
        const btnText = document.getElementById('btn-text');
        
        if (!form || !statusEl || !submitBtn || !btnText) return;

        function setStatus(text, type = 'info') {
            statusEl.textContent = text;
            statusEl.className = 'text-sm ' + (
                type === 'error' ? 'text-red-400' : 
                type === 'success' ? 'text-green-400' : 
                'text-gray-400'
            );
        }

        function setFieldError(fieldName, message) {
            const errorEl = document.getElementById(`${fieldName}-error`);
            if (errorEl) {
                errorEl.textContent = message;
            }
        }

        function clearFieldErrors() {
            ['firstName', 'lastName', 'email', 'message'].forEach(fieldName => {
                setFieldError(fieldName, '');
            });
        }

        function setButtonState(isSubmitting) {
            if (isSubmitting) {
                submitBtn.disabled = true;
                btnText.textContent = 'Sending...';
                submitBtn.classList.add('opacity-50', 'cursor-not-allowed');
            } else {
                submitBtn.disabled = false;
                btnText.textContent = 'Send Message';
                submitBtn.classList.remove('opacity-50', 'cursor-not-allowed');
            }
        }

        // Form validation
        function validateForm() {
            clearFieldErrors();
            setStatus('');
            
            const firstName = form.querySelector('input[name="firstName"]').value.trim();
            const lastName = form.querySelector('input[name="lastName"]').value.trim();
            const email = form.querySelector('input[name="email"]').value.trim();
            const message = form.querySelector('textarea[name="message"]').value.trim();

            let isValid = true;

            if (!firstName) {
                setFieldError('firstName', 'First name is required.');
                isValid = false;
            }
            
            if (!lastName) {
                setFieldError('lastName', 'Last name is required.');
                isValid = false;
            }
            
            if (!email) {
                setFieldError('email', 'Email is required.');
                isValid = false;
            } else {
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (!emailRegex.test(email)) {
                    setFieldError('email', 'Please enter a valid email address.');
                    isValid = false;
                }
            }
            
            if (!message) {
                setFieldError('message', 'Message is required.');
                isValid = false;
            }

            return isValid;
        }

        // Clear individual field errors on input
        ['firstName', 'lastName', 'email', 'message'].forEach(fieldName => {
            const field = form.querySelector(`[name="${fieldName}"]`);
            if (field) {
                field.addEventListener('input', function() {
                    setFieldError(fieldName, '');
                });
            }
        });

        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            // Validate form
            if (!validateForm()) {
                return;
            }

            setStatus('Sending your message...');
            setButtonState(true);

            try {
                const formData = new FormData(form);
                const response = await fetch(form.action, {
                    method: 'POST',
                    headers: { 'Accept': 'application/json' },
                    body: formData
                });

                const data = await response.json().catch(() => ({}));
                
                if (response.ok) {
                    setStatus('Thank you! Your message has been sent successfully.', 'success');
                    form.reset();
                    clearFieldErrors();
                } else {
                    const errorMsg = (data && (data.error || (data.errors && data.errors[0] && data.errors[0].message))) || 'Something went wrong. Please try again later.';
                    setStatus(errorMsg, 'error');
                }
            } catch (error) {
                setStatus('Network error. Please check your connection and try again.', 'error');
            } finally {
                setButtonState(false);
            }
        });
    })();
</script>
